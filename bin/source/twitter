#!/usr/bin/perl
use 5.010;
use strict;
use warnings;
use utf8::all;
use autodie qw(:all);

use App::Exobrain;
use App::Exobrain::Message;
use App::Exobrain::Cache;
use Date::Manip::Date;
use Try::Tiny;

use Net::Twitter;

use constant DEBUG => 1;
use constant LAST_CHECK => 'last_check';

my $exobrain = App::Exobrain->new;

my $config = $exobrain->config->{Twitter};

my $twitter = Net::Twitter->new(
    traits   => [qw(API::RESTv1_1)],
    consumer_key        => $config->{consumer_key},
    consumer_secret     => $config->{consumer_secret},
    access_token        => $config->{access_token},
    access_token_secret => $config->{access_token_secret},
);

my $bus   = $exobrain->pub;
my $cache = App::Exobrain::Cache->new( namespace => $0 );

# Fetch our last ID from the cache, or otherwise just pick
# the last mention we've seen.

my $last_id = $cache->compute(LAST_CHECK, undef,
    sub { $twitter->mentions({count => 1})->[0]{id} }
);

while (1) {

    sleep(90);

    my $statuses;

    try { 
        $statuses = $twitter->mentions({since_id => $last_id});
    }
    catch {
        next;
    };

    for my $status ( @$statuses ) {
        my $text = $status->{text};
        my @tags;

        while ($text =~ m{\#(?<tag>\w+)}g) {
            push @tags, $+{tag};
        }

        my $epoch_time = do {
            my $dmd = Date::Manip::Date->new;
            my $timestamp = $status->{created_at};
            $dmd->parse($timestamp) and die "Can't parse $timestamp";
            $dmd->printf("%s");
        };

        print "[$status->{id}] $epoch_time <$status->{user}{screen_name}> $status->{text} (Tags: @tags)\n" if DEBUG;

        my $msg = App::Exobrain::Message::Raw->new(
            namespace => 'SOCIAL',
            timestamp => $epoch_time,
            source    => 'TWITTER',
            data      => {
                            # TODO: Users should be their own objects.
                            #       Then we can translate between idents
                            user  => $status->{user}{screen_name},
                            to_me => 1,  # XXX - Needed?
                            tags  => \@tags,
                            message => $status->{text},
                         },
            raw       => $status,
            summary   => "<$status->{user}{screen_name}> $status->{text}",
        )->send_msg( $bus->_socket );

        if ($status->{id} > $last_id) {
            $last_id = $status->{id};
            $cache->set(LAST_CHECK, $last_id);
        }
    }
}
