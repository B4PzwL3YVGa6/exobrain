#!/usr/bin/perl
use 5.010;
use strict;
use warnings;
use autodie qw(:all);
use WWW::Mechanize;
use Config::Tiny;
use Try::Tiny;
use JSON::Any;
use Data::Dumper;
use App::Exobrain;
use App::Exobrain::Bus;
use App::Exobrain::Message;
use App::Exobrain::Cache;
use utf8::all;

use constant DEBUG => 0;
use constant LAST_CHECK => 'last_check';

my $exobrain = App::Exobrain->new;
my $config   = $exobrain->config->{FourSquare};
my $TOKEN    = "oauth_token=$config->{auth_token}&v=20130425";
my $BASE     = 'https://api.foursquare.com/v2';

my $mech = WWW::Mechanize->new();
my $json = JSON::Any->new;

my $cache = App::Exobrain::Cache->new(namespace => 'foursquare');
my $bus  = App::Exobrain::Bus->new( type => 'PUB' );

my $last_check = $cache->compute(LAST_CHECK, undef, sub { time() } );

# Debug switch is a hack to fetch last 2 hours of activity.
if ($ARGV[0] eq '-d') {
    $last_check = time() - 7200;
}

warn("$0: last check at $last_check\n") if DEBUG;

while (1) {

    # Record when we're making our call.
    my $checktime = time();

    try {
        $mech->get("$BASE/checkins/recent?afterTimestamp=$last_check&$TOKEN");
    }
    catch {
        warn "No connection, or connection failed: $_";
        sleep(60);
        next;
    };

    # If we've made our call successfully, then cache it and update
    # for our next iteration.
    $cache->set(LAST_CHECK, $checktime);
    $last_check = $checktime;

    my $checkins = $json->decode($mech->content)->{response}{recent};

    # Checkins come in most-recent first, so we reverse them and make
    # them chronological.

    foreach my $checkin (reverse @$checkins) {
        my $name = ( $checkin->{user}{firstName} // "" ) . " "
                 . ( $checkin->{user}{lastName}  // "" );

        my $time = localtime($checkin->{createdAt});

        my $summary = "$name is at $checkin->{venue}{name}";
        my $shout = $checkin->{shout} // "";

        say(Dumper "$summary ( $shout )") if DEBUG;

        my $msg = App::Exobrain::Message->new(
            namespace => 'GEO',
            timestamp => $checkin->{createdAt},
            source    => 'FOURSQUARE',
            data      => $checkin,
            raw       => $checkin,
            summary   => $summary,
        )->send( $bus->_socket );
    }

    warn("$0: --\n") if DEBUG;

    sleep(60);
}
