#!/usr/bin/perl
use v5.10.0;
use strict;
use warnings;
use autodie;
use App::Exobrain;
use Dancer;
use Try::Tiny;

use Data::Dumper;
use constant DEBUG => 0;

set port => 3000;
set logger => 'console';
set log => 'debug';

debug("Debug from dancer");

=begin example

This is what a set of params look like when they come in.

'params' => {
            'source' => 'pjf/test',
            'urtext' => '2013 09 14.5 1 "Testy test test"',
            'value' => '1.0',
            'splat' => $VAR1->{'_route_params'}{'splat'},
            'origin' => 'web',
            'created' => '1379125551',
            'comment' => 'Testy test test',
            'action' => 'ADD',      # Have also seen 'DEL'
            'id' => '5233c92fcc19310bb5000008',
            'daystamp' => '15962'
},

=end example

=cut

# Catch all requests.
any qr{.*} => sub {

    state $exobrain = App::Exobrain->new;

    # If we see what could be a valid response, but it's not
    # an 'ADD', then ignore it.
    if( param('action') and param('action') ne 'ADD') {
        return "OK";
    }

    # Exobrain just accepts the packet whole.

    try {
        $exobrain->measure( 'Beeminder', params() )->send_msg;
    }
    catch {
        my $pktdump = Dumper( { params() } );
        error("Invalid packet received " . $pktdump);
        status 'error';
        return "Invalid packet";
    }

    return "OK";
};

dance;
